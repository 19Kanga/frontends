@font-face {
  font-family: "Oblik";
  src: url("/fonts/oblik.woff2") format("woff2"),
    url("/fonts/oblik.woff") format("woff"),
    /* Add other formats if available */
    url("/fonts/oblik.ttf") format("truetype");
  /* Add font-weight and font-style if applicable */
}

:root {
        color-scheme: light;
        --in: 72.06% 0.191 231.6;
        --fallback-p: #491eff;
        --fallback-pc: #d4dbff;
        --fallback-s: #ff41c7;
        --fallback-sc: #fff9fc;
        --fallback-a: #00cfbd;
        --fallback-ac: #00100d;
        --fallback-n: #2b3440;
        --fallback-nc: #d7dde4;
        --fallback-b1: #ffffff;
        --fallback-b2: #e5e6e6;
        --fallback-b3: #e5e6e6;
        --fallback-bc: #1f2937;
        --fallback-in: #00b3f0;
        --fallback-inc: #000000;
        --fallback-su: #00ca92;
        --fallback-suc: #000000;
        --fallback-wa: #ffc22d;
        --fallback-wac: #000000;
        --fallback-er: #ff6f70;
        --fallback-erc: #000000
      }

/* scrollbar */
::-webkit-scrollbar {
	width: 5px;
	height: 5px;
	border-radius: 50px !important;
	transition: all 0.4s ease-in-out;
}

::-webkit-scrollbar-thumb {
	background: rgb(85 85 85/70);
	border-radius: 50px;
	transition: all 0.4s ease-in-out;
}

::-webkit-scrollbar-track {
	background: #f1f1f1;
}
.fa {
  font-weight: bold;
}
.col-md-1{flex:0 0 auto;width:8.33333333%}
.col-md-2{flex:0 0 auto;width:16.66666667%}
.col-md-3{flex:0 0 auto;width:25%}
.col-md-4{flex:0 0 auto;width:33.33333333%}
.col-md-5{flex:0 0 auto;width:41.66666667%}
.col-md-6{flex:0 0 auto;width:50%}
.col-md-7{flex:0 0 auto;width:58.33333333%}
.col-md-8{flex:0 0 auto;width:66.66666667%}
.col-md-9{flex:0 0 auto;width:75%}
.col-md-10{flex:0 0 auto;width:83.33333333%}
.col-md-11{flex:0 0 auto;width:91.66666667%}
.col-md-12{flex:0 0 auto;width:100%}

.dropdowncontent {
  /* Adjust as needed based on your layout's margins/paddings */
  box-sizing: border-box;
  position: absolute;
  /* transform: translateX(-100%); */

}

.base-image {
  transition: opacity 0.3s ease-in-out;
  /* Adjust transition duration and timing function as needed */
}

.overlay-image {
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  /* Adjust transition duration and timing function as needed */
}

.products_content:hover .base-image {
  opacity: 0;
}

.products_content:hover .overlay-image {
  opacity: 1;
  animation: animate__zoomOut 0.5s ease;
}

@keyframes animate__zoomOut {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(1.1);
    /* Adjust the scale factor as needed */
  }
}

.hidden1 {
  opacity: 0;
  transform: translateY(-100%);
  transition: opacity 0.5s ease, transform 0.5s ease;
}



/* .dropdown-content.transition-transform {
  transition: transform 0.3s ease;
  transform: translateX(0);
} */

.mattress-content {
  top: 100%;
  left: 30%;
  height:fit-content;
  white-space:nowrap;
  /* background-color: red; */
  transform: translateX(-30%);
}

.sales-content {
  top: 100%;
  left: 65%;
  /* background-color: red; */
  transform: translateX(-65%);
}

.accessories-content {
  top: 100%;
  left: 10%;
  /* background-color: red; */
  transform: translateX(-10%);
  width: 30vw;
}


.dropdown:hover .dropdowncontent {
  display: flex;
  /* padding-top: 5%; */
}

.dropdown:hover .listitem::before {
  display: block;
}

.dropdown:hover .listitem {
  background-color: #08c;
  color: white;
}

.listitem::before {
  display: none;
  z-index: 100;
  content: "";
  position: absolute;
  left: 50%;
  top: 100%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 20px solid transparent;
  border-right: 20px solid transparent;
  border-bottom: 20px solid transparent;
  border-top: 20px solid #08c;
  z-index: 100;
}

.custom-animation {
  animation-delay: 0.01s;
  animation-duration: 0.5s;

}

.image-container {
  max-width: 100%;
  /* Set maximum width to prevent image from overflowing */
  height: auto;
  /* Allow height to adjust according to the image aspect ratio */
}

.image-container img {
  width: 100%;
  /* Make image fill its container horizontally */
  height: auto;
  /* Allow height to adjust according to the image aspect ratio */
}


@media (min-width: 768px) {
  .carousel-container {
    overflow: hidden;
  }

  img {
    object-fit: cover;
    object-position: center;
  }

}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.custom-grid {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.byb-badge {
  position: relative;
  z-index: 3;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #00acbb;
  color: #fff;
  width: 88%;
  text-align: center;
  border-radius: 6px;
  padding-block: 10px;
  margin-top: calc(-0.3* var(15px));
  margin-bottom: 8px;
  margin-inline: auto;
  box-shadow: 0px 1px 9px 2px #0e0e0e38;
  font-size: 14px;
}


.drawer {
    position: relative;
    display: grid;
    grid-auto-columns: max-content auto;
    width: 100%}
.drawer-content {
    grid-column-start: 2;
    grid-row-start: 1;
    min-width: 0px}
.drawer-side {
    pointer-events: none;
    position: fixed;
    inset-inline-start: 0px;
    top: 0px;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-template-rows: repeat(1, minmax(0, 1fr));
    align-items: flex-start;
    justify-items: start;
    overflow-x: hidden;
    overflow-y: hidden;
    overscroll-behavior: contain;
    height: 100vh;
    height: 100dvh}
.drawer-side > .drawer-overlay {
    position: sticky;
    top: 0px;
    place-self: stretch;
    cursor: pointer;
    background-color: transparent;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms}
.drawer-side > * {
    grid-column-start: 1;
    grid-row-start: 1}
.drawer-side > *:not(.drawer-overlay) {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 300ms;
    will-change: transform;
    transform: translateX(-100%)}
[dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(100%)}
.drawer-toggle {
    position: fixed;
    height: 0px;
    width: 0px;
    appearance: none;
    opacity: 0}
.drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    overflow-y: auto}
.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(0%)}
.drawer-end {
    grid-auto-columns: auto max-content}
.drawer-end .drawer-toggle ~ .drawer-content {
    grid-column-start: 1}
.drawer-end .drawer-toggle ~ .drawer-side {
    grid-column-start: 2;
    justify-items: end}
.drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(100%)}
[dir="rtl"] .drawer-end .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(-100%)}
.drawer-end .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(0%)}
.dropdown {
    position: relative;
    display: inline-block}
.dropdown > *:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px}
.dropdown .dropdown-content {
    position: absolute}
.dropdown:is(:not(details)) .dropdown-content {
    visibility: hidden;
    opacity: 0;
    transform-origin: top;
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 200ms}
.dropdown-end .dropdown-content {
    inset-inline-end: 0px}
.dropdown-left .dropdown-content {
    bottom: auto;
    inset-inline-end: 100%;
    top: 0px;
    transform-origin: right}
.dropdown-right .dropdown-content {
    bottom: auto;
    inset-inline-start: 100%;
    top: 0px;
    transform-origin: left}
.dropdown-bottom .dropdown-content {
    bottom: auto;
    top: 100%;
    transform-origin: top}
.dropdown-top .dropdown-content {
    bottom: 100%;
    top: auto;
    transform-origin: bottom}
.dropdown-end.dropdown-right .dropdown-content {
    bottom: 0px;
    top: auto}
.dropdown-end.dropdown-left .dropdown-content {
    bottom: 0px;
    top: auto}
.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
    visibility: visible;
    opacity: 1}

.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
    background-color: #0006}
.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px}

.drawer-open > .drawer-toggle {
    display: none}
.drawer-open > .drawer-toggle ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    position: sticky;
    display: block;
    width: auto;
    overscroll-behavior: auto}
.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(0%)}
[dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
    transform: translateX(0%)}
.drawer-open > .drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible}
.drawer-open > .drawer-side {
    overflow-y: auto}
html:has(.drawer-toggle:checked) {
    overflow-y: hidden;
    /* scrollbar-gutter: stable */
  }
html:has(.drawer-open.drawer-open) {
    overflow-y: auto;
    scrollbar-gutter: auto}

.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
    cursor: default;
    background-color: transparent}
.join.join-vertical > :where(*:not(:first-child)) {
    margin-left: 0px;
    margin-right: 0px;
    margin-top: -1px}
.join.join-horizontal > :where(*:not(:first-child)) {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-inline-start: -1px}
.menu-horizontal > li:not(.menu-title) > details > ul {
    margin-inline-start: 0px;
    margin-top: 1rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-inline-end: 0.5rem}

.drawer {
  transition: transform 0.1s ease-in-out !important;
  /* Adjust duration and timing function as needed */
}

.banner-text-container {
  top: 50%;
  left: 12%;
  transform: translateY(-50%)
}

.banner-heading {
  font-size: 55px;
  font-weight: 600;
}

.banner-sub-heading {
  font-size: 18px;
  font-weight: 500;
  margin-bottom: -15px
}

.banner-button {
  font-size: 14px;
  font-weight: 500;
  padding: 10px 32px;
}

@media only screen and (max-width: 768px) {
  /* Styles for mobile and tablet screens */

  .banner-text-container {
    top: 40%;
    /* Adjust positioning as needed for mobile/tablet */
    left: 3%;
    /* Adjust positioning as needed for mobile/tablet */
  }

  .banner-heading {
    font-size: 18px;
  }

  .banner-sub-heading {
    font-size: 13px;
    /* Adjust font size for smaller screens */
    margin-bottom: -5px;
    /* Adjust margin as needed */
  }

  .banner-button {
    margin-top: 5px;
    display: inline-block;
    font-size: 12px;
    padding: 8px 22px;

  }
}

.banner-button:hover {
  background-color: #1e391c;
  color: #bb9369;
}

.offer-text {
  top: 50%;
  position: absolute;
  left: 50%;
  transform: translate(-50%, -50%);
}

.trending-text {
  position: relative;
  font-size: 32px;
  font-weight: 600;
  line-height: 34px;
  text-align: center;
  color: #222222;
}

.trending-text-below {
  color: #878787;
  font-family: Libre Baskerville;
  font-size: 16px;
  font-style: italic;
  font-weight: 400;
  line-height: 23.8px;
  text-align: center;
}

.trending-text-line {
  width: 24px;
  height: 1px;
  gap: 0px;
  opacity: 0.64px;
}

.trending-text::after {
  content: "";
  width: 24px;
  height: 1px;
  top: 2773px;
  left: 728px;
  gap: 0px;
  opacity: 0.64px;

}

.trending-text::before {
  content: "";
  width: 24px;
  height: 1px;
  top: 2773px;
  left: 728px;
  gap: 0px;
  opacity: 0.64px;
}

.underline-container {
  display: flex;
  justify-content: center;
  margin-bottom: 8px;
  /* Adjust space between "Trending" text and underlines as needed */
}

.underline {
  width: 24px;
  height: 1px;
  opacity: 0.64px;
  background-color: #222222;
  
  /* Adjust color as needed */
  margin: 0 8px;
  /* Adjust space between underlines as needed */
}

.collapse {
    position: relative;
    display: grid;
    overflow: hidden;
    grid-template-rows: auto 0fr;
    transition: grid-template-rows 0.2s;
    width: 100%;
    border-radius: var(--rounded-box, 1rem)}
.collapse-title,
.collapse > input[type="checkbox"],
.collapse > input[type="radio"],
.collapse-content {
    grid-column-start: 1;
    grid-row-start: 1}
.collapse > input[type="checkbox"],
.collapse > input[type="radio"] {
    appearance: none;
    opacity: 0}
.collapse-content {
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0px;
    transition: visibility 0.2s;
    transition: padding 0.2s ease-out,
    background-color 0.2s ease-out;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset}
.collapse[open],
.collapse-open,
.collapse:focus:not(.collapse-close) {
    grid-template-rows: auto 1fr}
.collapse:not(.collapse-close):has(> input[type="checkbox"]:checked),
.collapse:not(.collapse-close):has(> input[type="radio"]:checked) {
    grid-template-rows: auto 1fr}
.collapse[open] > .collapse-content,
.collapse-open > .collapse-content,
.collapse:focus:not(.collapse-close) > .collapse-content,
.collapse:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-content,
.collapse:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-content {
    visibility: visible;
    min-height: fit-content}


.collapse-arrow > .collapse-title:after {
    position: absolute;
    display: block;
    height: 0.5rem;
    width: 0.5rem;
    --tw-translate-y: -100%;
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 150ms;
    transition-duration: 0.2s;
    top: 1.9rem;
    inset-inline-end: 1.4rem;
    content: "";
    transform-origin: 75% 75%;
    box-shadow: 2px 2px;
    pointer-events: none}
.collapse-plus > .collapse-title:after {
    position: absolute;
    display: block;
    height: 0.5rem;
    width: 0.5rem;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 300ms;
    top: 0.9rem;
    inset-inline-end: 1.4rem;
    content: "+";
    pointer-events: none}
.collapse:not(.collapse-open):not(.collapse-close) > input[type="checkbox"],
.collapse:not(.collapse-open):not(.collapse-close) > input[type="radio"]:not(:checked),
.collapse:not(.collapse-open):not(.collapse-close) > .collapse-title {
    cursor: pointer}
.collapse:focus:not(.collapse-open):not(.collapse-close):not(.collapse[open]) > .collapse-title {
    cursor: unset}
.collapse-title {
    position: relative}
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
    z-index: 1}
.collapse-title,
:where(.collapse > input[type="checkbox"]),
:where(.collapse > input[type="radio"]) {
    width: 100%;
    padding: 1rem;
    padding-inline-end: 3rem;
    min-height: 3.75rem;
    transition: background-color 0.2s ease-out}
.collapse[open] > :where(.collapse-content),
.collapse-open > :where(.collapse-content),
.collapse:focus:not(.collapse-close) > :where(.collapse-content),
.collapse:not(.collapse-close) > :where(input[type="checkbox"]:checked ~ .collapse-content),
.collapse:not(.collapse-close) > :where(input[type="radio"]:checked ~ .collapse-content) {
    padding-bottom: 1rem;
    transition: padding 0.2s ease-out,
    background-color 0.2s ease-out}
.collapse[open].collapse-arrow > .collapse-title:after,
.collapse-open.collapse-arrow > .collapse-title:after,
.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-arrow:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
    --tw-translate-y: -50%;
    --tw-rotate: 225deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}
.collapse[open].collapse-plus > .collapse-title:after,
.collapse-open.collapse-plus > .collapse-title:after,
.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-title:after,
.collapse-plus:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-title:after {
    content: "−"}

.checkbox {
    flex-shrink: 0;
    --chkbg: var(--fallback-bc,oklch(var(--bc)/1));
    --chkfg: var(--fallback-b1,oklch(var(--b1)/1));
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    appearance: none;
    border-radius: var(--rounded-btn, 0.5rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: 0.2}
.collapse:not(td):not(tr):not(colgroup) {
    visibility: visible}
.collapse {
    position: relative;
    display: grid;
    overflow: hidden;
    grid-template-rows: auto 0fr;
    transition: grid-template-rows 0.2s;
    width: 100%;
    border-radius: var(--rounded-box, 1rem)}
.collapse-title,
.collapse > input[type="checkbox"],
.collapse > input[type="radio"],
.collapse-content {
    grid-column-start: 1;
    grid-row-start: 1}
.collapse > input[type="checkbox"],
.collapse > input[type="radio"] {
    appearance: none;
    opacity: 0}
.collapse-content {
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0px; 
    transition: visibility 0.2s;
    transition: padding 0.2s ease-out,
    background-color 0.2s ease-out;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset}
.collapse[open],
.collapse-open,
.collapse:focus:not(.collapse-close) {
    grid-template-rows: auto 1fr}
.collapse:not(.collapse-close):has(> input[type="checkbox"]:checked),
.collapse:not(.collapse-close):has(> input[type="radio"]:checked) {
    grid-template-rows: auto 1fr}
.collapse[open] > .collapse-content,
.collapse-open > .collapse-content,
.collapse:focus:not(.collapse-close) > .collapse-content,
.collapse:not(.collapse-close) > input[type="checkbox"]:checked ~ .collapse-content,
.collapse:not(.collapse-close) > input[type="radio"]:checked ~ .collapse-content {
    visibility: visible;
    min-height: fit-content}

@media (min-width: 640px) {

  .sm\:absolute {
    position: absolute;
  }

  .sm\:top-12 {
    top: 3rem;
  }

  .sm\:mb-0 {
    margin-bottom: 0px;
  }

  .sm\:block {
    display: block;
  }

  .sm\:inline-block {
    display: inline-block;
  }

  .sm\:inline {
    display: inline;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:h-20 {
    height: 5rem;
  }

  .sm\:h-\[480px\] {
    height: 480px;
  }

  .sm\:h-auto {
    height: auto;
  }

  .sm\:w-1\/2 {
    width: 50%;
  }

  .sm\:w-20 {
    width: 5rem;
  }

  .sm\:w-\[360px\] {
    width: 360px;
  }

  .sm\:w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }

  .sm\:max-w-\[90px\] {
    max-width: 90px;
  }

  .sm\:max-w-xs {
    max-width: 20rem;
  }

  .sm\:flex-1 {
    flex: 1 1 0%;
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:grid-cols-\[repeat\(auto-fill\2c _minmax\(185px\2c _1fr\)\)\] {
    grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:flex-col {
    flex-direction: column;
  }

  .sm\:flex-nowrap {
    flex-wrap: nowrap;
  }

  .sm\:items-start {
    align-items: flex-start;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:justify-start {
    justify-content: flex-start;
  }

  .sm\:justify-end {
    justify-content: flex-end;
  }

  .sm\:justify-center {
    justify-content: center;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:gap-16 {
    gap: 4rem;
  }

  .sm\:gap-4 {
    gap: 1rem;
  }

  .sm\:gap-5 {
    gap: 1.25rem;
  }

  .sm\:gap-6 {
    gap: 1.5rem;
  }

  .sm\:gap-\[18px\] {
    gap: 18px;
  }

  .sm\:p-10 {
    padding: 2.5rem;
  }

  .sm\:p-2 {
    padding: 0.5rem;
  }

  .sm\:p-5 {
    padding: 1.25rem;
  }

  .sm\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }

  .sm\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }

  .sm\:py-4 {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  .sm\:pt-6 {
    padding-top: 1.5rem;
  }

  .sm\:text-left {
    text-align: left;
  }

  .sm\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  .sm\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .sm\:text-\[22px\] {
    font-size: 22px;
  }

  .sm\:text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .sm\:text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  .sm\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .sm\:shadow-card {
    --tw-shadow: 0px 0px 10px rgba(0, 0, 0, 0.04);
    --tw-shadow-colored: 0px 0px 10px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .sm\:hover\:shadow-hover:hover {
    --tw-shadow: 0px 8px 40px rgba(23, 31, 70, 0.08);
    --tw-shadow-colored: 0px 8px 40px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 768px) {

  .md\:top-\[85px\] {
    top: 85px;
  }

  .md\:z-10 {
    z-index: 10;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:block {
    display: block;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-\[calc\(100vh-85px\)\] {
    height: calc(100vh - 85px);
  }

  .md\:h-auto {
    height: auto;
  }

  .md\:w-\[322px\] {
    width: 322px;
  }

  .md\:w-\[calc\(100\%-340px\)\] {
    width: calc(100% - 340px);
  }

  .md\:max-w-sm {
    max-width: 24rem;
  }

  .md\:grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:items-end {
    align-items: flex-end;
  }

  .md\:justify-center {
    justify-content: center;
  }

  .md\:gap-4 {
    gap: 1rem;
  }

  .md\:gap-40 {
    gap: 10rem;
  }

  .md\:overflow-auto {
    overflow: auto;
  }

  .md\:rounded-lg {
    border-radius: 0.5rem;
  }

  .md\:pl-8 {
    padding-left: 2rem;
  }
}

@media (min-width: 1024px) {

  .lg\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .lg\:w-\[305px\] {
    width: 305px;
  }

  .lg\:w-\[calc\(100\%-320px\)\] {
    width: calc(100% - 320px);
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:pl-10 {
    padding-left: 2.5rem;
  }
}

@media (min-width: 1280px) {

  .xl\:w-\[360px\] {
    width: 360px;
  }

  .xl\:w-\[calc\(100\%-377px\)\] {
    width: calc(100% - 377px);
  }

  .xl\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

@media (min-width: 0px) and (max-width: 767px) {

  .xh\:fixed {
    position: fixed;
  }

  .xh\:left-0 {
    left: 0px;
  }

  .xh\:w-full {
    width: 100%;
  }

  .xh\:justify-between {
    justify-content: space-between;
  }

  .xh\:border-y {
    border-top-width: 1px;
    border-bottom-width: 1px;
  }

  .xh\:border-\[\#EFF0F6\] {
    --tw-border-opacity: 1;
    border-color: rgb(239 240 246 / var(--tw-border-opacity));
  }

  .xh\:bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }

  .xh\:p-4 {
    padding: 1rem;
  }
}

.ltr\:left-0:where([dir="ltr"], [dir="ltr"] *) {
  left: 0px;
}

.ltr\:right-0:where([dir="ltr"], [dir="ltr"] *) {
  right: 0px;
}

.ltr\:mr-2:where([dir="ltr"], [dir="ltr"] *) {
  margin-right: 0.5rem;
}

.ltr\:rounded-bl:where([dir="ltr"], [dir="ltr"] *) {
  border-bottom-left-radius: 0.25rem;
}

.ltr\:rounded-br:where([dir="ltr"], [dir="ltr"] *) {
  border-bottom-right-radius: 0.25rem;
}

.ltr\:rounded-tl:where([dir="ltr"], [dir="ltr"] *) {
  border-top-left-radius: 0.25rem;
}

.ltr\:rounded-tr:where([dir="ltr"], [dir="ltr"] *) {
  border-top-right-radius: 0.25rem;
}

.ltr\:pl-3:where([dir="ltr"], [dir="ltr"] *) {
  padding-left: 0.75rem;
}

@media (min-width: 640px) {

  .sm\:ltr\:text-left:where([dir="ltr"], [dir="ltr"] *) {
    text-align: left;
  }
}

@media (min-width: 768px) {

  .ltr\:md\:right-5:where([dir="ltr"], [dir="ltr"] *) {
    right: 1.25rem;
  }
}

.rtl\:left-0:where([dir="rtl"], [dir="rtl"] *) {
  left: 0px;
}

.rtl\:right-0:where([dir="rtl"], [dir="rtl"] *) {
  right: 0px;
}

.rtl\:ml-2:where([dir="rtl"], [dir="rtl"] *) {
  margin-left: 0.5rem;
}

.rtl\:flex-row-reverse:where([dir="rtl"], [dir="rtl"] *) {
  flex-direction: row-reverse;
}

.rtl\:rounded-bl:where([dir="rtl"], [dir="rtl"] *) {
  border-bottom-left-radius: 0.25rem;
}

.rtl\:rounded-br:where([dir="rtl"], [dir="rtl"] *) {
  border-bottom-right-radius: 0.25rem;
}

.rtl\:rounded-tl:where([dir="rtl"], [dir="rtl"] *) {
  border-top-left-radius: 0.25rem;
}

.rtl\:rounded-tr:where([dir="rtl"], [dir="rtl"] *) {
  border-top-right-radius: 0.25rem;
}

.rtl\:pr-3:where([dir="rtl"], [dir="rtl"] *) {
  padding-right: 0.75rem;
}

@media (min-width: 640px) {

  .sm\:rtl\:text-right:where([dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }
}

@media (min-width: 768px) {

  .rtl\:md\:left-5:where([dir="rtl"], [dir="rtl"] *) {
    left: 1.25rem;
  }
}

@media (prefers-color-scheme: dark) {

  .dark\:border-gray-600 {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity));
  }

  .dark\:bg-gray-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity));
  }

  .dark\:bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity));
  }

  .dark\:text-gray-300 {
    --tw-text-opacity: 1;
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }

  .dark\:text-gray-400 {
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity));
  }

  .dark\:text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity));
  }

  .dark\:text-red-500 {
    --tw-text-opacity: 1;
    color: rgb(239 68 68 / var(--tw-text-opacity));
  }

  .dark\:ring-offset-gray-800 {
    --tw-ring-offset-color: #1f2937;
  }

  .dark\:hover\:text-gray-300:hover {
    --tw-text-opacity: 1;
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }

  .dark\:focus\:border-blue-700:focus {
    --tw-border-opacity: 1;
    border-color: rgb(29 78 216 / var(--tw-border-opacity));
  }

  .dark\:focus\:border-blue-800:focus {
    --tw-border-opacity: 1;
    border-color: rgb(30 64 175 / var(--tw-border-opacity));
  }

  .dark\:focus\:ring-blue-600:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(37 99 235 / var(--tw-ring-opacity));
  }

  .dark\:focus\:ring-offset-gray-800:focus {
    --tw-ring-offset-color: #1f2937;
  }

  .dark\:active\:bg-gray-700:active {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity));
  }

  .dark\:active\:text-gray-300:active {
    --tw-text-opacity: 1;
    color: rgb(209 213 219 / var(--tw-text-opacity));
  }
}



.join{
  background-color: white;

}
.join.join-vertical{
  flex-direction: column;
  border-radius: 0;
  background-color: white;
  scrollbar-width:0
}
.join.join-horizontal{
  flex-direction: row;
}
 .divider {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1rem;
    white-space: nowrap}
.divider:before,
  .divider:after {
    height: 0.125rem;
    width: 100%;
    flex-grow: 1;
    --tw-content: '';
    content: var(--tw-content);
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1))}
.divider-start:before {
    display: none}
.divider-end:after {
    display: none}
 .divider-neutral:before,
  .divider-neutral:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)))}
.divider-primary:before,
  .divider-primary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)))}
.divider-secondary:before,
  .divider-secondary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity)))}
.divider-accent:before,
  .divider-accent:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity)))}
.divider-success:before,
  .divider-success:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)))}
.divider-warning:before,
  .divider-warning:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity)))}
.divider-info:before,
  .divider-info:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity)))}
.divider-error:before,
  .divider-error:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)))}

.row{
  display:flex;
  flex-wrap:wrap;
}

.ellippsis{
  width: 161px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}
.drawer {
  transition: transform 0.1s ease-in-out !important;
  /* Adjust duration and timing function as needed */
}
.db-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  /* border-radius: 0.375rem; */
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  text-transform: capitalize;
  /* --tw-shadow: 0 2px 6px 0 rgb(67 89 113 / 12%); */
  /* --tw-shadow-colored: 0 2px 6px 0 var(--tw-shadow-color); */
  /* box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow); */
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: linear;
}
.db-field-control {
  display: block;
  height: 2.5rem;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  transition-timing-function: linear;
}
@media (prefers-reduced-motion: no-preference) {
	:root {
		scroll-behavior: smooth;
	}
}


/* @media screen (max-width:618px){} */
